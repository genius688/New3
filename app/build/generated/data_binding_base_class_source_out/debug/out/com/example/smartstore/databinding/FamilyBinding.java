// Generated by view binder compiler. Do not edit!
package com.example.smartstore.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.HorizontalScrollView;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.smartstore.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FamilyBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button addTask;

  @NonNull
  public final Button clearTask;

  @NonNull
  public final LinearLayout containerLayout;

  @NonNull
  public final LinearLayout currentTaskContainer;

  @NonNull
  public final TextView date;

  @NonNull
  public final TextView date2;

  @NonNull
  public final LinearLayout dateTimeBar;

  @NonNull
  public final TextView day;

  @NonNull
  public final Guideline guideline;

  @NonNull
  public final Guideline guideline2;

  @NonNull
  public final Guideline guideline3;

  @NonNull
  public final Button help;

  @NonNull
  public final ImageView imageView13;

  @NonNull
  public final LinearLayout linearLayout15;

  @NonNull
  public final TextView month;

  @NonNull
  public final LinearLayout part1;

  @NonNull
  public final LinearLayout part2;

  @NonNull
  public final Guideline part32;

  @NonNull
  public final Guideline part34;

  @NonNull
  public final Guideline part35;

  @NonNull
  public final HorizontalScrollView part5;

  @NonNull
  public final RecyclerView recyclerCurrentTask;

  @NonNull
  public final Button return1;

  @NonNull
  public final ScrollView scrollView5;

  @NonNull
  public final TextView test;

  @NonNull
  public final TextView text1;

  @NonNull
  public final TextView text2;

  @NonNull
  public final TextView twoTOfour;

  @NonNull
  public final TextView twoTOone;

  @NonNull
  public final TextView twoTOthree;

  @NonNull
  public final Button urgentTask;

  @NonNull
  public final ImageView view1;

  @NonNull
  public final ImageView view2;

  @NonNull
  public final ImageView view3;

  @NonNull
  public final ImageView view4;

  @NonNull
  public final ImageView warning;

  private FamilyBinding(@NonNull ConstraintLayout rootView, @NonNull Button addTask,
      @NonNull Button clearTask, @NonNull LinearLayout containerLayout,
      @NonNull LinearLayout currentTaskContainer, @NonNull TextView date, @NonNull TextView date2,
      @NonNull LinearLayout dateTimeBar, @NonNull TextView day, @NonNull Guideline guideline,
      @NonNull Guideline guideline2, @NonNull Guideline guideline3, @NonNull Button help,
      @NonNull ImageView imageView13, @NonNull LinearLayout linearLayout15, @NonNull TextView month,
      @NonNull LinearLayout part1, @NonNull LinearLayout part2, @NonNull Guideline part32,
      @NonNull Guideline part34, @NonNull Guideline part35, @NonNull HorizontalScrollView part5,
      @NonNull RecyclerView recyclerCurrentTask, @NonNull Button return1,
      @NonNull ScrollView scrollView5, @NonNull TextView test, @NonNull TextView text1,
      @NonNull TextView text2, @NonNull TextView twoTOfour, @NonNull TextView twoTOone,
      @NonNull TextView twoTOthree, @NonNull Button urgentTask, @NonNull ImageView view1,
      @NonNull ImageView view2, @NonNull ImageView view3, @NonNull ImageView view4,
      @NonNull ImageView warning) {
    this.rootView = rootView;
    this.addTask = addTask;
    this.clearTask = clearTask;
    this.containerLayout = containerLayout;
    this.currentTaskContainer = currentTaskContainer;
    this.date = date;
    this.date2 = date2;
    this.dateTimeBar = dateTimeBar;
    this.day = day;
    this.guideline = guideline;
    this.guideline2 = guideline2;
    this.guideline3 = guideline3;
    this.help = help;
    this.imageView13 = imageView13;
    this.linearLayout15 = linearLayout15;
    this.month = month;
    this.part1 = part1;
    this.part2 = part2;
    this.part32 = part32;
    this.part34 = part34;
    this.part35 = part35;
    this.part5 = part5;
    this.recyclerCurrentTask = recyclerCurrentTask;
    this.return1 = return1;
    this.scrollView5 = scrollView5;
    this.test = test;
    this.text1 = text1;
    this.text2 = text2;
    this.twoTOfour = twoTOfour;
    this.twoTOone = twoTOone;
    this.twoTOthree = twoTOthree;
    this.urgentTask = urgentTask;
    this.view1 = view1;
    this.view2 = view2;
    this.view3 = view3;
    this.view4 = view4;
    this.warning = warning;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FamilyBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FamilyBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.family, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FamilyBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.add_task;
      Button addTask = ViewBindings.findChildViewById(rootView, id);
      if (addTask == null) {
        break missingId;
      }

      id = R.id.clear_task;
      Button clearTask = ViewBindings.findChildViewById(rootView, id);
      if (clearTask == null) {
        break missingId;
      }

      id = R.id.containerLayout;
      LinearLayout containerLayout = ViewBindings.findChildViewById(rootView, id);
      if (containerLayout == null) {
        break missingId;
      }

      id = R.id.current_task_container;
      LinearLayout currentTaskContainer = ViewBindings.findChildViewById(rootView, id);
      if (currentTaskContainer == null) {
        break missingId;
      }

      id = R.id.date;
      TextView date = ViewBindings.findChildViewById(rootView, id);
      if (date == null) {
        break missingId;
      }

      id = R.id.date2;
      TextView date2 = ViewBindings.findChildViewById(rootView, id);
      if (date2 == null) {
        break missingId;
      }

      id = R.id.date_time_bar;
      LinearLayout dateTimeBar = ViewBindings.findChildViewById(rootView, id);
      if (dateTimeBar == null) {
        break missingId;
      }

      id = R.id.day;
      TextView day = ViewBindings.findChildViewById(rootView, id);
      if (day == null) {
        break missingId;
      }

      id = R.id.guideline;
      Guideline guideline = ViewBindings.findChildViewById(rootView, id);
      if (guideline == null) {
        break missingId;
      }

      id = R.id.guideline2;
      Guideline guideline2 = ViewBindings.findChildViewById(rootView, id);
      if (guideline2 == null) {
        break missingId;
      }

      id = R.id.guideline3;
      Guideline guideline3 = ViewBindings.findChildViewById(rootView, id);
      if (guideline3 == null) {
        break missingId;
      }

      id = R.id.help;
      Button help = ViewBindings.findChildViewById(rootView, id);
      if (help == null) {
        break missingId;
      }

      id = R.id.imageView13;
      ImageView imageView13 = ViewBindings.findChildViewById(rootView, id);
      if (imageView13 == null) {
        break missingId;
      }

      id = R.id.linearLayout15;
      LinearLayout linearLayout15 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout15 == null) {
        break missingId;
      }

      id = R.id.month;
      TextView month = ViewBindings.findChildViewById(rootView, id);
      if (month == null) {
        break missingId;
      }

      id = R.id.part1;
      LinearLayout part1 = ViewBindings.findChildViewById(rootView, id);
      if (part1 == null) {
        break missingId;
      }

      id = R.id.part2;
      LinearLayout part2 = ViewBindings.findChildViewById(rootView, id);
      if (part2 == null) {
        break missingId;
      }

      id = R.id.part32;
      Guideline part32 = ViewBindings.findChildViewById(rootView, id);
      if (part32 == null) {
        break missingId;
      }

      id = R.id.part34;
      Guideline part34 = ViewBindings.findChildViewById(rootView, id);
      if (part34 == null) {
        break missingId;
      }

      id = R.id.part35;
      Guideline part35 = ViewBindings.findChildViewById(rootView, id);
      if (part35 == null) {
        break missingId;
      }

      id = R.id.part5;
      HorizontalScrollView part5 = ViewBindings.findChildViewById(rootView, id);
      if (part5 == null) {
        break missingId;
      }

      id = R.id.recycler_current_task;
      RecyclerView recyclerCurrentTask = ViewBindings.findChildViewById(rootView, id);
      if (recyclerCurrentTask == null) {
        break missingId;
      }

      id = R.id.return1;
      Button return1 = ViewBindings.findChildViewById(rootView, id);
      if (return1 == null) {
        break missingId;
      }

      id = R.id.scrollView5;
      ScrollView scrollView5 = ViewBindings.findChildViewById(rootView, id);
      if (scrollView5 == null) {
        break missingId;
      }

      id = R.id.test;
      TextView test = ViewBindings.findChildViewById(rootView, id);
      if (test == null) {
        break missingId;
      }

      id = R.id.text1;
      TextView text1 = ViewBindings.findChildViewById(rootView, id);
      if (text1 == null) {
        break missingId;
      }

      id = R.id.text2;
      TextView text2 = ViewBindings.findChildViewById(rootView, id);
      if (text2 == null) {
        break missingId;
      }

      id = R.id.twoTOfour;
      TextView twoTOfour = ViewBindings.findChildViewById(rootView, id);
      if (twoTOfour == null) {
        break missingId;
      }

      id = R.id.twoTOone;
      TextView twoTOone = ViewBindings.findChildViewById(rootView, id);
      if (twoTOone == null) {
        break missingId;
      }

      id = R.id.twoTOthree;
      TextView twoTOthree = ViewBindings.findChildViewById(rootView, id);
      if (twoTOthree == null) {
        break missingId;
      }

      id = R.id.urgent_task;
      Button urgentTask = ViewBindings.findChildViewById(rootView, id);
      if (urgentTask == null) {
        break missingId;
      }

      id = R.id.view1;
      ImageView view1 = ViewBindings.findChildViewById(rootView, id);
      if (view1 == null) {
        break missingId;
      }

      id = R.id.view2;
      ImageView view2 = ViewBindings.findChildViewById(rootView, id);
      if (view2 == null) {
        break missingId;
      }

      id = R.id.view3;
      ImageView view3 = ViewBindings.findChildViewById(rootView, id);
      if (view3 == null) {
        break missingId;
      }

      id = R.id.view4;
      ImageView view4 = ViewBindings.findChildViewById(rootView, id);
      if (view4 == null) {
        break missingId;
      }

      id = R.id.warning;
      ImageView warning = ViewBindings.findChildViewById(rootView, id);
      if (warning == null) {
        break missingId;
      }

      return new FamilyBinding((ConstraintLayout) rootView, addTask, clearTask, containerLayout,
          currentTaskContainer, date, date2, dateTimeBar, day, guideline, guideline2, guideline3,
          help, imageView13, linearLayout15, month, part1, part2, part32, part34, part35, part5,
          recyclerCurrentTask, return1, scrollView5, test, text1, text2, twoTOfour, twoTOone,
          twoTOthree, urgentTask, view1, view2, view3, view4, warning);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
