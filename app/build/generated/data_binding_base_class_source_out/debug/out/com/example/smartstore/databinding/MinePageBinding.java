// Generated by view binder compiler. Do not edit!
package com.example.smartstore.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.smartstore.Circle;
import com.example.smartstore.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class MinePageBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button HelpBtn;

  @NonNull
  public final ImageView HonorLevel;

  @NonNull
  public final TextView HonorLevelText;

  @NonNull
  public final TextView HonorNextLevel;

  @NonNull
  public final Button checkinButton;

  @NonNull
  public final TextView con;

  @NonNull
  public final Button contactBtn;

  @NonNull
  public final ProgressBar expProgress;

  @NonNull
  public final TextView fourTOine;

  @NonNull
  public final TextView fourTOthree;

  @NonNull
  public final TextView fourTOtwo;

  @NonNull
  public final ImageView imageView12;

  @NonNull
  public final TextView maxExp;

  @NonNull
  public final ImageView myFeedbackBtn;

  @NonNull
  public final TextView myFeedbackBtn1;

  @NonNull
  public final ImageView myLikeBtn;

  @NonNull
  public final ImageView myPeoBtn;

  @NonNull
  public final ImageView myRecordBtn;

  @NonNull
  public final LinearLayout part10;

  @NonNull
  public final ImageView part11;

  @NonNull
  public final LinearLayout part12;

  @NonNull
  public final LinearLayout part13;

  @NonNull
  public final LinearLayout part8;

  @NonNull
  public final LinearLayout part9;

  @NonNull
  public final ImageView rank;

  @NonNull
  public final LinearLayout rootLayout;

  @NonNull
  public final Button settingBtn;

  @NonNull
  public final TextView userExp;

  @NonNull
  public final TextView userId;

  @NonNull
  public final Circle userImg;

  @NonNull
  public final EditText userName1;

  @NonNull
  public final TextView userRank;

  @NonNull
  public final EditText userSignature1;

  private MinePageBinding(@NonNull ConstraintLayout rootView, @NonNull Button HelpBtn,
      @NonNull ImageView HonorLevel, @NonNull TextView HonorLevelText,
      @NonNull TextView HonorNextLevel, @NonNull Button checkinButton, @NonNull TextView con,
      @NonNull Button contactBtn, @NonNull ProgressBar expProgress, @NonNull TextView fourTOine,
      @NonNull TextView fourTOthree, @NonNull TextView fourTOtwo, @NonNull ImageView imageView12,
      @NonNull TextView maxExp, @NonNull ImageView myFeedbackBtn, @NonNull TextView myFeedbackBtn1,
      @NonNull ImageView myLikeBtn, @NonNull ImageView myPeoBtn, @NonNull ImageView myRecordBtn,
      @NonNull LinearLayout part10, @NonNull ImageView part11, @NonNull LinearLayout part12,
      @NonNull LinearLayout part13, @NonNull LinearLayout part8, @NonNull LinearLayout part9,
      @NonNull ImageView rank, @NonNull LinearLayout rootLayout, @NonNull Button settingBtn,
      @NonNull TextView userExp, @NonNull TextView userId, @NonNull Circle userImg,
      @NonNull EditText userName1, @NonNull TextView userRank, @NonNull EditText userSignature1) {
    this.rootView = rootView;
    this.HelpBtn = HelpBtn;
    this.HonorLevel = HonorLevel;
    this.HonorLevelText = HonorLevelText;
    this.HonorNextLevel = HonorNextLevel;
    this.checkinButton = checkinButton;
    this.con = con;
    this.contactBtn = contactBtn;
    this.expProgress = expProgress;
    this.fourTOine = fourTOine;
    this.fourTOthree = fourTOthree;
    this.fourTOtwo = fourTOtwo;
    this.imageView12 = imageView12;
    this.maxExp = maxExp;
    this.myFeedbackBtn = myFeedbackBtn;
    this.myFeedbackBtn1 = myFeedbackBtn1;
    this.myLikeBtn = myLikeBtn;
    this.myPeoBtn = myPeoBtn;
    this.myRecordBtn = myRecordBtn;
    this.part10 = part10;
    this.part11 = part11;
    this.part12 = part12;
    this.part13 = part13;
    this.part8 = part8;
    this.part9 = part9;
    this.rank = rank;
    this.rootLayout = rootLayout;
    this.settingBtn = settingBtn;
    this.userExp = userExp;
    this.userId = userId;
    this.userImg = userImg;
    this.userName1 = userName1;
    this.userRank = userRank;
    this.userSignature1 = userSignature1;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static MinePageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static MinePageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.mine_page, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static MinePageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Help_btn;
      Button HelpBtn = ViewBindings.findChildViewById(rootView, id);
      if (HelpBtn == null) {
        break missingId;
      }

      id = R.id.HonorLevel;
      ImageView HonorLevel = ViewBindings.findChildViewById(rootView, id);
      if (HonorLevel == null) {
        break missingId;
      }

      id = R.id.HonorLevelText;
      TextView HonorLevelText = ViewBindings.findChildViewById(rootView, id);
      if (HonorLevelText == null) {
        break missingId;
      }

      id = R.id.HonorNextLevel;
      TextView HonorNextLevel = ViewBindings.findChildViewById(rootView, id);
      if (HonorNextLevel == null) {
        break missingId;
      }

      id = R.id.checkin_button;
      Button checkinButton = ViewBindings.findChildViewById(rootView, id);
      if (checkinButton == null) {
        break missingId;
      }

      id = R.id.con;
      TextView con = ViewBindings.findChildViewById(rootView, id);
      if (con == null) {
        break missingId;
      }

      id = R.id.contact_btn;
      Button contactBtn = ViewBindings.findChildViewById(rootView, id);
      if (contactBtn == null) {
        break missingId;
      }

      id = R.id.exp_progress;
      ProgressBar expProgress = ViewBindings.findChildViewById(rootView, id);
      if (expProgress == null) {
        break missingId;
      }

      id = R.id.fourTOine;
      TextView fourTOine = ViewBindings.findChildViewById(rootView, id);
      if (fourTOine == null) {
        break missingId;
      }

      id = R.id.fourTOthree;
      TextView fourTOthree = ViewBindings.findChildViewById(rootView, id);
      if (fourTOthree == null) {
        break missingId;
      }

      id = R.id.fourTOtwo;
      TextView fourTOtwo = ViewBindings.findChildViewById(rootView, id);
      if (fourTOtwo == null) {
        break missingId;
      }

      id = R.id.imageView12;
      ImageView imageView12 = ViewBindings.findChildViewById(rootView, id);
      if (imageView12 == null) {
        break missingId;
      }

      id = R.id.max_exp;
      TextView maxExp = ViewBindings.findChildViewById(rootView, id);
      if (maxExp == null) {
        break missingId;
      }

      id = R.id.my_feedback_btn;
      ImageView myFeedbackBtn = ViewBindings.findChildViewById(rootView, id);
      if (myFeedbackBtn == null) {
        break missingId;
      }

      id = R.id.my_feedback_btn1;
      TextView myFeedbackBtn1 = ViewBindings.findChildViewById(rootView, id);
      if (myFeedbackBtn1 == null) {
        break missingId;
      }

      id = R.id.my_like_btn;
      ImageView myLikeBtn = ViewBindings.findChildViewById(rootView, id);
      if (myLikeBtn == null) {
        break missingId;
      }

      id = R.id.my_peo_btn;
      ImageView myPeoBtn = ViewBindings.findChildViewById(rootView, id);
      if (myPeoBtn == null) {
        break missingId;
      }

      id = R.id.my_record_btn;
      ImageView myRecordBtn = ViewBindings.findChildViewById(rootView, id);
      if (myRecordBtn == null) {
        break missingId;
      }

      id = R.id.part_10;
      LinearLayout part10 = ViewBindings.findChildViewById(rootView, id);
      if (part10 == null) {
        break missingId;
      }

      id = R.id.part_11;
      ImageView part11 = ViewBindings.findChildViewById(rootView, id);
      if (part11 == null) {
        break missingId;
      }

      id = R.id.part_12;
      LinearLayout part12 = ViewBindings.findChildViewById(rootView, id);
      if (part12 == null) {
        break missingId;
      }

      id = R.id.part_13;
      LinearLayout part13 = ViewBindings.findChildViewById(rootView, id);
      if (part13 == null) {
        break missingId;
      }

      id = R.id.part_8;
      LinearLayout part8 = ViewBindings.findChildViewById(rootView, id);
      if (part8 == null) {
        break missingId;
      }

      id = R.id.part_9;
      LinearLayout part9 = ViewBindings.findChildViewById(rootView, id);
      if (part9 == null) {
        break missingId;
      }

      id = R.id.rank;
      ImageView rank = ViewBindings.findChildViewById(rootView, id);
      if (rank == null) {
        break missingId;
      }

      id = R.id.root_layout;
      LinearLayout rootLayout = ViewBindings.findChildViewById(rootView, id);
      if (rootLayout == null) {
        break missingId;
      }

      id = R.id.setting_btn;
      Button settingBtn = ViewBindings.findChildViewById(rootView, id);
      if (settingBtn == null) {
        break missingId;
      }

      id = R.id.user_exp;
      TextView userExp = ViewBindings.findChildViewById(rootView, id);
      if (userExp == null) {
        break missingId;
      }

      id = R.id.user_id;
      TextView userId = ViewBindings.findChildViewById(rootView, id);
      if (userId == null) {
        break missingId;
      }

      id = R.id.user_img;
      Circle userImg = ViewBindings.findChildViewById(rootView, id);
      if (userImg == null) {
        break missingId;
      }

      id = R.id.user_name1;
      EditText userName1 = ViewBindings.findChildViewById(rootView, id);
      if (userName1 == null) {
        break missingId;
      }

      id = R.id.user_rank;
      TextView userRank = ViewBindings.findChildViewById(rootView, id);
      if (userRank == null) {
        break missingId;
      }

      id = R.id.user_signature1;
      EditText userSignature1 = ViewBindings.findChildViewById(rootView, id);
      if (userSignature1 == null) {
        break missingId;
      }

      return new MinePageBinding((ConstraintLayout) rootView, HelpBtn, HonorLevel, HonorLevelText,
          HonorNextLevel, checkinButton, con, contactBtn, expProgress, fourTOine, fourTOthree,
          fourTOtwo, imageView12, maxExp, myFeedbackBtn, myFeedbackBtn1, myLikeBtn, myPeoBtn,
          myRecordBtn, part10, part11, part12, part13, part8, part9, rank, rootLayout, settingBtn,
          userExp, userId, userImg, userName1, userRank, userSignature1);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
